cmake_minimum_required(VERSION 3.0.2)
project(vaccum_walker)

## Compile as C++11, supported in ROS Kinetic and newer
# add_compile_options(-std=c++11)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  roscpp
  rospy
  std_msgs
)

## Generate added messages and services with any dependencies listed here
generate_messages(
  DEPENDENCIES
  std_msgs
)

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if your package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
#  INCLUDE_DIRS include
#  LIBRARIES vaccum_walker
#  CATKIN_DEPENDS roscpp rospy std_msgs
#  DEPENDS system_lib
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
include_directories(
  # include
  ${catkin_INCLUDE_DIRS}
)

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)
add_executable(vaccum_walker_node src/walker_node.cpp  src/walker.cpp)
target_link_libraries(vaccum_walker_node ${catkin_LIBRARIES})
add_dependencies(vaccum_walker_node vaccum_walker_generate_messages_cpp ${catkin_EXPORTED_TARGETS})

# add_executable(vac_node src/walker_node.cpp src/walker.cpp)
# target_link_libraries(vac_node ${catkin_LIBRARIES})
# add_dependencies(vac_node vaccum_walker_generate_messages_cpp ${catkin_EXPORTED_TARGETS})